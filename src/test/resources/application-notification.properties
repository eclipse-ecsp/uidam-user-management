notification.provider=internal
notification.email.provider=${notification.provider}
#notification.sms.provider=${notification.provider}
#notification.push.provider=aws
notification.email.provider.host=smtp.gmail.com
notification.email.provider.port=587
notification.email.provider.username=abc@gmail.com
notification.email.provider.passwd=*****
notification.email.provider.properties.mail.smtp.auth=true
notification.email.provider.properties.mail.smtp.starttls.enable=true
notification.config.resolver=internal
notification.config.path=classpath:/notification/uidam-notification-config.json

#template engine
template.engine=thymeleaf
template.format=HTML
template.resolver=CLASSPATH
template.prefix=/notification/

application.security.disabled=true
app.authorization-server-host-name=${AUTHORIZATION_SERVER_URL:http://localhost:9443}
driverClassName=org.hibernate.dialect.PostgreSQLDialect
health.postgresdb.monitor.enabled=${health_postgresdb_monitor_enabled:true}
health.postgresdb.monitor.restart.on.failure=${health_postgresdb_monitor_restart_on_failure:true}
logging.level.org.eclipse.ecsp.uidam.usermanagement=INFO
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.root=ERROR
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:testdb;NON_KEYWORDS=value;INIT=CREATE SCHEMA IF NOT EXISTS UIDAM
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=${SHOW_SQL:true}
maxPoolSize=${max_pool_size:20}
metrics.prometheus.enabled=${metrics_prometheus_enabled:false}
postgres.max.idle.time=${postgres_max_idle_time:0}
postgres.pool.name=hikariConnectionPool
postgres.jdbc.url=${POSTGRES_DATASOURCE:jdbc:postgresql://localhost:5432/uidam_management}
postgres.password=${POSTGRES_PASSWORD:postgres}
postgres.username=${POSTGRES_USERNAME:postgres}
service.name=${spring_application_servicename:uidam-user-management.ignite-core}
postgres.driver.class.name=org.postgresql.Driver
postgres.data-source-properties.cachePrepStmts=${postgres_data_source_properties_cachePrepStmts:true}
postgres.data-source-properties.prepStmtCacheSize=${postgres_data_source_properties_prepStmtCacheSize:250}
postgres.data-source-properties.prepStmtCacheSqlLimit=${postgres_data_source_properties_prepStmtCacheSqlLimit:2048}
prometheus.agent.port=${prometheus_agent_port:9100}
prometheus.agent.port.exposed=${prometheus_agent_port_exposed:9100}
postgres.connection.timeout.ms=${postgres_connection_timeout_ms:60000}
postgres.expected99thPercentileMs=${postgres_expected99thPercentileMs:60000}
postgresdb.metrics.enabled=${postgresdb_metrics_enabled:false}
postgresdb.metrics.executor.shutdown.buffer.ms=${postgresdb_metrics_executor_shutdown_buffer_ms:2000}
postgresdb.metrics.thread.freq.ms=${postgresdb_metrics_thread_freq_ms:5000}
postgresdb.metrics.thread.initial.delay.ms=${postgresdb_metrics_thread_initial_delay_ms:2000}
spring.application.version=${spring_application_version:1.0}
spring.application.servicename=${spring_application_servicename:uidam-user-management.ignite-core}
spring.application.name=${spring_application_name:uidam-user-management}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
hash.algorithm=SHA-256
###API GATEWAY Configuration###
api.registry.enabled=${api_registry_enabled:false}
api.registry.service-name=${api_registry_service-name:http://api-registry-int-svc.data-platform}
api.security.enabled=${api_security_enabled:false}
api.gatewayUrls="${api_gatewayUrls:api-gateway3-int-svc.data-platform:7000}"
api.gateway.default.filters="JwtAuthValidator"
server.port=8084
openapi.path.include=${openapi_path_include:/v1/users/**, /v2/users/**, /v1/users/filter, /v1/users/{id}, /v2/users/{id}, /v1/users,/v1/accounts/**, /v1/accounts/filter, /v1/accounts/{id}, /v1/accounts /v1/users/status, /v1/users/external, /v1/users/external/{id}, /v1/users/{user_id}/accountRoleMapping}
openapi.exclude=""
####User Response Configuration ####
app.account-id=${account_id:ignite}
app.account-name=${account_name:ignite}
app.account-type=${account_type:}
app.password-encoder=${password_encoder:SHA-256}
app.recovery-secret-expires-in-minutes=${recovery_secret_expires_in_minutes:1}
app.max-allowed-login-attempts=${max_allowed_login_attempts:3}
app.password-update-time-interval=${password_update_time_interval:500}
app.min-password-length=${min_password_length:10}
app.max-password-length=${max_password_length:15}
app.additional-attr-check-enabled-for-sign-up=${additional_attr_check_enabled_for_sign_up:false}
app.captcha-enforce-after-no-of-failures=${captcha_enforce_after_no_of_failures:}


####Email Verification Configuration ####
app.is-email-verification-enabled=${is_email_verification_enabled:true}
app.email-verification-url=${email_verification_url:https://api-gateway3.eks-ignite-dev.ic.aws.harmandev.com/v1/emailVerification/%s}
app.email-regex-pattern-exclude=${email_regex_pattern_exclude:(.*)@guestuser.com}
app.email-verification-subject=${email_verification_subject:UIDAM Email Verification}
app.email-verification-content=${email_verification_content:Please verify your UIDAM account that is associated with \
  this email address.<br/><a href=%s>Verify My Email</a><br/>If clicking the button doesn't seem to work, you can copy \
  and paste the following link into your browser.<br/>%s}
app.auth-server-email-verification-response-url=${auth_server_email_verification_response_url:\
  https://localhost:9443/emailVerification/verify}

###Graylog Configuration###
APP_GRAYLOG_ENABLED=${GRAYLOG_ENABLE:false}
APP_GRAYLOG_HOST=${GRAYLOG_HOST:graylog.default.svc.cluster.local}
APP_GRAYLOG_PORT=${GRAYLOG_PORT:12201}
APP_NEVER_BLOCK_FOR_GRAYLOG=${NEVER_BLOCK_FOR_GRAYLOG:false}
APP_LOG_FOLDER=${LOG_FOLDER:logs/}
APP_LOG_LEVEL=${LOG_LEVEL:ERROR}
APP_IGNITE_LOG_LEVEL=${IGNITE_LOG_LEVEL:ERROR}
APP_SVC_LOG_LEVEL=${SVC_LOG_LEVEL:INFO}
APP_STORAGE_LOG_LEVEL=${STORAGE_LOG_LEVEL:ERROR}
APP_SPRING_LOG_LEVEL=${SPRING_LOG_LEVEL:ERROR}
APP_REGISTRY_COMMON_LOG_LEVEL=${REGISTRY_COMMON_LOG_LEVEL:ERROR}
APP_LOG_APPENDER=${LOG_APPENDER:ASYNC-GELF}

#Account management
app.user-default-account-name=${user_default_account_name:userdefaultaccount}

#Registered client
client.registration.status=approved
client.registration.sercret.key=secret_key
client.refresh.token.validaity.default=3600
client.access.token.validaity.default=3600
client.authorization.code.validaity.default=300

spring.liquibase.enabled=false
spring.jpa.properties.hibernate.default_schema=uidam
spring.liquibase.default-schema=uidam
uidam.auth.admin.scope=${UIDAM_AUTH_ADMIN_SCOPE:UIDAMSystem}


